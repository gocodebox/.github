name: 'LifterLMS PHPUnit Testing Setup'
description: 'Setup the PHPUnit testing environment for use in phpunit testing workflows for LifterLMS and LifterLMS add-ons'

inputs:

  # PHP (shivammathur/setup-php@v2)
  php-version:
    description: "PHP version, passed directly to shivammathur/setup-php@v2"
    default: "8.2"
  coverage:
    description: "Coverage engine, passed directly to shivammathur/setup-php@v2"
    default: "none" # "xdebug" to run coverage phpunit test coverage.

  llms-branch:
    description: "LifterLMS branch to install from git. If not supplied uses the latest version from WordPress.org."

  # MySQL
  db-name:
    description: "MySQL database name"
    default: "llms_tests"
  db-user:
    description: "MySQL user name"
    default: "root"
  db-pass:
    description: "MySQL user password"
    default: "password"
  db-host:
    description: "MySQL host"
    default: "127.0.0.1"

  # WordPress
  wp-version:
    description: "WordPress core version"
    default: "latest"
  wp-tests-version:
    description: "WordPress tests library version"
    default: false

  # Environment File
  env-file:
    description: "Add custom environment variables via a .env file"
    default: ".github/env"

  # Keys.
  deploy-key:
    description: "Add SSH keys to be added to the container"
    default: ""

  # Secrets.
  secrets:
    description: "JSON object of secrets to be added to the $GITHUB_ENV"
    default: "{}"

  # Cache Busting:
  cache-suffix:
    description: "A suffix to added to cache keys."
    default: "v4"

runs:
  using: "composite"
  steps:

    # Load all available secrets into the $GITHUB_ENV
    - name: Secrets context to Environment variables
      shell: bash
      env:
        SECRETS_CONTEXT: ${{ inputs.secrets }}
      run: |
        for key in $( echo $SECRETS_CONTEXT | jq -r "to_entries|map(.key)|.[]" ); do
          echo "::add-mask::${key}"
          if [ "LLMS_DEPLOY_KEY" != "${key}" ]; then
            val=$( echo $SECRETS_CONTEXT | jq -r ".${key}" )
            echo "${key}="${val}"" >> $GITHUB_ENV
          fi
        done

    # Load environment variables from the specified .env file into the $GITHUB_ENV
    - name: Load dot environment file
      shell: bash
      run: |
        if [[ -f "${{ inputs.env-file }}" ]]; then
          for key in $( cat ${{ inputs.env-file }} ); do
            echo ${key} >> $GITHUB_ENV
          done
        fi

    # Environment vars used by various commands.
    - name: Add default environment variables
      shell: bash
      run: |
        echo TESTS_DB_NAME=${{ inputs.db-name }} >> $GITHUB_ENV
        echo TESTS_DB_USER=${{ inputs.db-user }} >> $GITHUB_ENV
        echo TESTS_DB_PASS=${{ inputs.db-pass }} >> $GITHUB_ENV
        echo TESTS_DB_HOST=${{ inputs.db-host }} >> $GITHUB_ENV
        echo WP_VERSION=${{ inputs.wp-version }} >> $GITHUB_ENV
        echo WP_TESTS_VERSION=${{ inputs.wp-tests-version }} >> $GITHUB_ENV
        echo WP_TESTS_CACHE_VERSION=$( /bin/date -u "+%Y%m%d" ) >> $GITHUB_ENV
        echo MYSQL_ROOT_PASSWORD=${{ inputs.db-pass }} >> $GITHUB_ENV

    # All extra matrix vars (excluding defaults in $SKIP var) are added to the environment.
    - name: Add extra matrix vars to environment
      shell: bash
      env:
        MATRIX_CONTEXT: ${{ toJSON( matrix ) }}
      run: |
        SKIP=(WP PHP LLMS allow-failure name-append)
        for key in $( echo "$MATRIX_CONTEXT" | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
            match=0
            for skip_key in "${SKIP[@]}"; do
                if [[ "$key" =~ "$skip_key=" ]]; then
                    match=1
                    break
                fi
            done
            if [[ $match = 0 && "$key" =~ "=" ]]; then
              echo ${key} >> $GITHUB_ENV
            fi
        done
    
    # Add SSH Key.
    - uses: webfactory/ssh-agent@v0.6.0
      if: ${{ inputs.deploy-key != '' }}
      with:
        ssh-private-key: ${{ inputs.deploy-key }}

    # Setup PHP
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        coverage: ${{ inputs.coverage }}
        tools: wp,composer

    # Setup MySQL
    - name: Setup MySql
      uses: shogo82148/actions-setup-mysql@v1
      with:
        mysql-version: 'mariadb-10.6'
        root-password: ${{ inputs.db-pass }}
    - name: Create MySQL database
      shell: bash
      run: mysql --user=$TESTS_DB_USER --password=$TESTS_DB_PASS --host=$TESTS_DB_HOST -e "CREATE DATABASE $TESTS_DB_NAME;"

    # Composer Install.
    - name: Get composer cache directory
      id: composer-cache
      shell: bash
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}${{ inputs.cache-suffix }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Install Composer dependencies
      shell: bash
      run: composer update

    # Install WP Tests.
    - name: Cache WP Core Files
      uses: actions/cache@v3
      with:
        path: tmp/tests/wordpress
        key: wp-${{ inputs.wp-version }}-${{ env.WP_TESTS_CACHE_VERSION }}${{ inputs.cache-suffix }}
    - name: Cache WP Tests Lib
      uses: actions/cache@v3
      with:
        path: tmp/tests/wordpress-tests-lib
        key: wp-tests-lib-${{ env.WP_TESTS_VERSION || inputs.wp-version }}-${{ env.WP_TESTS_CACHE_VERSION }}${{ inputs.cache-suffix }}
    - name: Install WP Tests
      shell: bash
      run: composer run tests-install

    - name: Install LifterLMS Nightly
      shell: bash
      run: |
        if [[ ! -z "${{ inputs.llms-branch }}" ]]; then
          ./vendor/bin/llms-tests plugin https://github.com/gocodebox/lifterlms.git@${{ inputs.llms-branch }}
        fi
